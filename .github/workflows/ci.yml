name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.8.1'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Run tests
      run: flutter test --coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  build-web:
    name: Build Web App
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.8.1'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Build web app
      run: flutter build web --release
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/

  deploy-preview:
    name: Deploy Preview to Firebase
    runs-on: ubuntu-latest
    needs: [test, build-web]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: build/web/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Deploy to Firebase Hosting Preview
      env:
        FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: |
        firebase hosting:channel:deploy pr-${{ github.event.number }} \
          --project $FIREBASE_PROJECT_ID \
          --token $FIREBASE_TOKEN \
          --expires 30d
          
    - name: Comment PR with preview URL
      uses: actions/github-script@v7
      if: success()
      with:
        script: |
          const projectId = process.env.FIREBASE_PROJECT_ID;
          const prNumber = context.payload.pull_request.number;
          const previewUrl = `https://${projectId}--pr-${prNumber}-${Date.now().toString(36)}.web.app`;
          
          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸš€ **Preview deployed!** \n\nðŸ“± Preview URL: ${previewUrl}\n\n_This preview will be available for 30 days._`
          });
      env:
        FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build-web]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: build/web/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Deploy to Firebase Hosting Production
      env:
        FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: |
        firebase deploy --only hosting \
          --project $FIREBASE_PROJECT_ID \
          --token $FIREBASE_TOKEN