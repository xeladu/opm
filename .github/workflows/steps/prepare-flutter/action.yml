name: "Prepare Flutter"
description: "Sets up the Flutter environment, prepares the code, and validates it"

runs:
  using: "composite"
  steps:
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.35.1"
        channel: "stable"

    - name: Get packages for generator
      run: dart pub get
      shell: bash

    - name: Generate config.json
      env:
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        FIREBASE_VAULT_COLLECTION_PREFIX: ${{ secrets.FIREBASE_VAULT_COLLECTION_PREFIX }}
        FIREBASE_UTILS_COLLECTION_NAME: ${{ secrets.FIREBASE_UTILS_COLLECTION_NAME }}
      run: |
        dart run scripts/generate_config.dart config.json
      shell: bash

    - name: Get dependencies
      run: flutter pub get
      shell: bash

    - name: Analyze project
      run: flutter analyze
      shell: bash

    - name: Run tests and measure coverage
      run: |
        flutter test --coverage

        LH_TOTAL=0
        LF_TOTAL=0

        while IFS= read -r line; do
            if [[ $line == LH:* ]]; then
                LH_VALUE=${line#LH:}
                ((LH_TOTAL+=LH_VALUE))
            elif [[ $line == LF:* ]]; then
                LF_VALUE=${line#LF:}
                ((LF_TOTAL+=LF_VALUE))
            fi
        done < coverage/lcov.info

        if [[ $LF_TOTAL -gt 0 ]]; then
            TOTAL_COVERAGE=$(awk "BEGIN {printf "%.1f", ($LH_TOTAL/$LF_TOTAL)*100}")
        else
            TOTAL_COVERAGE=0
        fi

        if (( $(echo "$TOTAL_COVERAGE > 90" | bc -l) )); then
            ICON="✅✅✅"
        elif (( $(echo "$TOTAL_COVERAGE > 80" | bc -l) )); then
            ICON="✅✅"
        elif (( $(echo "$TOTAL_COVERAGE > 70" | bc -l) )); then
            ICON="✅"
        elif (( $(echo "$TOTAL_COVERAGE > 50" | bc -l) )); then
            ICON="⚠️"
        else
            ICON="❌"
        fi

        echo "$ICON Total Coverage: $TOTAL_COVERAGE%"
      shell: bash
