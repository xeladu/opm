name: "Prepare Flutter"
description: "Sets up the Flutter environment, prepares the code, and validates it"

inputs:
  firebase_api_key:
    description: 'Firebase API key'
    required: true
  firebase_auth_domain:
    description: 'Firebase auth domain'
    required: true
  firebase_project_id:
    description: 'Firebase project id'
    required: true
  firebase_storage_bucket:
    description: 'Firebase storage bucket'
    required: true
  firebase_messaging_sender_id:
    description: 'Firebase messaging sender id'
    required: true
  firebase_app_id:
    description: 'Firebase app id'
    required: true
  firebase_measurement_id:
    description: 'Firebase measurement id'
    required: true
  firebase_vault_collection_prefix:
    description: 'Vault collection prefix'
    required: true
  firebase_utils_collection_name:
    description: 'Utils collection name'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Flutter SDK
      run: |
        echo ''
        echo ' --- Install Flutter SDK ---'
      shell: bash

    - name: Install Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.35.1"
        channel: "stable"

    - name: Generate Firebase Configuration File
      env:
        FIREBASE_API_KEY: ${{ inputs.firebase_api_key }}
        FIREBASE_AUTH_DOMAIN: ${{ inputs.firebase_auth_domain }}
        FIREBASE_PROJECT_ID: ${{ inputs.firebase_project_id }}
        FIREBASE_STORAGE_BUCKET: ${{ inputs.firebase_storage_bucket }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ inputs.firebase_messaging_sender_id }}
        FIREBASE_APP_ID: ${{ inputs.firebase_app_id }}
        FIREBASE_MEASUREMENT_ID: ${{ inputs.firebase_measurement_id }}
        FIREBASE_VAULT_COLLECTION_PREFIX: ${{ inputs.firebase_vault_collection_prefix }}
        FIREBASE_UTILS_COLLECTION_NAME: ${{ inputs.firebase_utils_collection_name }}
      run: |
        echo ''
        echo ' --- Generate Firebase Configuration File ---'
        dart run scripts/generate_config.dart config.json
      shell: bash

    - name: Get Flutter Dependencies
      run: |
        echo ''
        echo ' --- Get Flutter Dependencies ---'
        flutter pub get
      shell: bash

    - name: Analyze Project
      run: |
        echo ''
        echo ' --- Analyze Project ---'
        flutter analyze
      shell: bash

    - name: Run Tests
      run: |
        echo ''
        echo ' --- Run Tests ---'
        flutter test --coverage

        LH_TOTAL=0
        LF_TOTAL=0

        while IFS= read -r line; do
          if [[ $line == LH:* ]]; then
            LH_VALUE=${line#LH:}
            ((LH_TOTAL+=LH_VALUE))
          elif [[ $line == LF:* ]]; then
            LF_VALUE=${line#LF:}
            ((LF_TOTAL+=LF_VALUE))
          fi
        done < coverage/lcov.info

        if [[ $LF_TOTAL -gt 0 ]]; then
          # pass shell vars into awk to avoid any quoting issues
          TOTAL_COVERAGE=$(awk -v lh="$LH_TOTAL" -v lf="$LF_TOTAL" 'BEGIN { if (lf > 0) printf "%.1f", (lh/lf)*100; else printf "0" }')
        else
          TOTAL_COVERAGE=0
        fi

        if (( $(echo "$TOTAL_COVERAGE > 90" | bc -l) )); then
          ICON="✅✅✅"
        elif (( $(echo "$TOTAL_COVERAGE > 80" | bc -l) )); then
          ICON="✅✅"
        elif (( $(echo "$TOTAL_COVERAGE > 70" | bc -l) )); then
          ICON="✅"
        elif (( $(echo "$TOTAL_COVERAGE > 50" | bc -l) )); then
          ICON="⚠️"
        else
          ICON="❌"
        fi

        echo "$ICON Total Coverage: $TOTAL_COVERAGE%"
      shell: bash
