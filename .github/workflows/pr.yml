name: Pull Request Workflow
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  prepare:
    name: Prepare enviroment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - name: Install Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version-file: pubspec.yaml
          channel: "stable"
          cache: true

      - name: Generate Firebase Configuration File
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          FIREBASE_VAULT_COLLECTION_PREFIX: ${{ secrets.FIREBASE_VAULT_COLLECTION_PREFIX }}
          FIREBASE_UTILS_COLLECTION_NAME: ${{ secrets.FIREBASE_UTILS_COLLECTION_NAME }}
        run: dart run scripts/generate_config.dart config.json
        shell: bash

      - name: Upload Configuration File
        uses: actions/upload-artifact@v4
        with:
          name: generated-config
          path: config.json

      - name: Get Flutter Dependencies
        run: flutter pub get
        shell: bash

      - name: Analyze Project
        run: flutter analyze
        shell: bash

      - name: Run Tests
        run: |
          flutter test --coverage

          LH_TOTAL=0
          LF_TOTAL=0

          while IFS= read -r line; do
            if [[ $line == LH:* ]]; then
              LH_VALUE=${line#LH:}
              ((LH_TOTAL+=LH_VALUE))
            elif [[ $line == LF:* ]]; then
              LF_VALUE=${line#LF:}
              ((LF_TOTAL+=LF_VALUE))
            fi
          done < coverage/lcov.info

          if [[ $LF_TOTAL -gt 0 ]]; then
            # pass shell vars into awk to avoid any quoting issues
            TOTAL_COVERAGE=$(awk -v lh="$LH_TOTAL" -v lf="$LF_TOTAL" 'BEGIN { if (lf > 0) printf "%.1f", (lh/lf)*100; else printf "0" }')
          else
            TOTAL_COVERAGE=0
          fi

          if (( $(echo "$TOTAL_COVERAGE > 90" | bc -l) )); then
            ICON="✅✅✅"
          elif (( $(echo "$TOTAL_COVERAGE > 80" | bc -l) )); then
            ICON="✅✅"
          elif (( $(echo "$TOTAL_COVERAGE > 70" | bc -l) )); then
            ICON="✅"
          elif (( $(echo "$TOTAL_COVERAGE > 50" | bc -l) )); then
            ICON="⚠️"
          else
            ICON="❌"
          fi

          echo "$ICON Total Coverage: $TOTAL_COVERAGE%"
        shell: bash

  deploy-web-preview:
    name: Deploy web app preview
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - name: Download Configuration File
        uses: actions/download-artifact@v5
        with:
          name: generated-config
          path: .

      - name: Install Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version-file: pubspec.yaml
          channel: "stable"
          cache: true

      - name: Build web app
        run: flutter build web

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_OPM_TOOL }}
          projectId: opm-tool
